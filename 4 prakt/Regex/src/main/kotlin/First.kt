//Проверка правильности последовательности операторов присваива-
//ния, правая часть которых – выражения, в которых используются
//строковые литералы и переменные, соединенные знаком +; а также
//выражения, в которых используются литералы типа integer, перемен-
//ные и операции сложения, вычитания, div и mod.
fun main(){
    val r = Regex("^\\s*[a-z_][\\w_]*\\s*:=\\s*" +
            "(((-?[a-z_][\\w_]*|-?[\\d][\\d]*)\\s*((\\s+mod\\s+|\\s+div\\s+|\\s*\\+\\s*|\\s*-\\s*)" +
            "\\s*(-?[a-z_][\\w_]*|-?[\\d][\\d]*))*)|((([a-z_][\\w_]*|(([#]\\d+)+|('[^']*')+)+)\\s*|" +
            "\\'(\\s*[\\w_]*\\s*)*\\'\\s*)(\\+((\\s*\\'(\\s*[\\w_]*\\s*)*\\')|" +
            "\\s*([a-z_][\\w_]*|(([#]\\d+)+|('[^']*')+)+))\\s*)*))\\s*;\$",
        RegexOption.IGNORE_CASE)
    println("Check regex just = ${r.matches("  _ := g mod f ;")}")
}